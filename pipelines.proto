syntax = "proto3";

package pipelines;

// Emit: nodes -> server
// Data: server -> worker (server -> agent -> worker)
// Work: server -> agent

message Emit {
  Data record = 1; // record emitted
  string stream = 2; // stream record was emitted to
}

message Data {
  uint64 correlationID = 1; // Global Work object Identifier
  uint64 guid = 2;          // Global Unique Identifier
  string bits = 3;          // Actual data to be processed
}

message Work {
  Data record = 1; // record to be processed
  Node node = 2;
}

message Node {
  string service = 1;
  string key = 2;
  string command = 3; // only needed for startup
  State state = 4;
}

enum State {
  PROD = 0;  // Active Production
  BACK = 1;  // Roll-Back on failure
  STAGE = 2; // Staging
  DEV = 3;   // Developmental use
}

message Timer {
  uint64 correlationID = 1; // Global work object Identifier
  uint64 guid = 2;          // Global Unique Identifier
  uint64 stamp = 3;         // Time to execute the time
}
