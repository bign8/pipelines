// Code generated by protoc-gen-go.
// source: pipelines.proto
// DO NOT EDIT!

/*
Package pipelines is a generated protocol buffer package.

It is generated from these files:
	pipelines.proto

It has these top-level messages:
	Emit
	Data
	Work
	Node
	Timer
*/
package pipelines

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
const _ = proto.ProtoPackageIsVersion1

type State int32

const (
	State_PROD  State = 0
	State_BACK  State = 1
	State_STAGE State = 2
	State_DEV   State = 3
)

var State_name = map[int32]string{
	0: "PROD",
	1: "BACK",
	2: "STAGE",
	3: "DEV",
}
var State_value = map[string]int32{
	"PROD":  0,
	"BACK":  1,
	"STAGE": 2,
	"DEV":   3,
}

func (x State) String() string {
	return proto.EnumName(State_name, int32(x))
}
func (State) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type Emit struct {
	Record *Data  `protobuf:"bytes,1,opt,name=record" json:"record,omitempty"`
	Stream string `protobuf:"bytes,2,opt,name=stream" json:"stream,omitempty"`
}

func (m *Emit) Reset()                    { *m = Emit{} }
func (m *Emit) String() string            { return proto.CompactTextString(m) }
func (*Emit) ProtoMessage()               {}
func (*Emit) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Emit) GetRecord() *Data {
	if m != nil {
		return m.Record
	}
	return nil
}

type Data struct {
	CorrelationID uint64 `protobuf:"varint,1,opt,name=correlationID" json:"correlationID,omitempty"`
	Guid          uint64 `protobuf:"varint,2,opt,name=guid" json:"guid,omitempty"`
	Bits          string `protobuf:"bytes,3,opt,name=bits" json:"bits,omitempty"`
}

func (m *Data) Reset()                    { *m = Data{} }
func (m *Data) String() string            { return proto.CompactTextString(m) }
func (*Data) ProtoMessage()               {}
func (*Data) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type Work struct {
	Record *Data `protobuf:"bytes,1,opt,name=record" json:"record,omitempty"`
	Node   *Node `protobuf:"bytes,2,opt,name=node" json:"node,omitempty"`
}

func (m *Work) Reset()                    { *m = Work{} }
func (m *Work) String() string            { return proto.CompactTextString(m) }
func (*Work) ProtoMessage()               {}
func (*Work) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Work) GetRecord() *Data {
	if m != nil {
		return m.Record
	}
	return nil
}

func (m *Work) GetNode() *Node {
	if m != nil {
		return m.Node
	}
	return nil
}

type Node struct {
	Service string `protobuf:"bytes,1,opt,name=service" json:"service,omitempty"`
	Key     string `protobuf:"bytes,2,opt,name=key" json:"key,omitempty"`
	Command string `protobuf:"bytes,3,opt,name=command" json:"command,omitempty"`
	State   State  `protobuf:"varint,4,opt,name=state,enum=pipelines.State" json:"state,omitempty"`
}

func (m *Node) Reset()                    { *m = Node{} }
func (m *Node) String() string            { return proto.CompactTextString(m) }
func (*Node) ProtoMessage()               {}
func (*Node) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

type Timer struct {
	CorrelationID uint64 `protobuf:"varint,1,opt,name=correlationID" json:"correlationID,omitempty"`
	Guid          uint64 `protobuf:"varint,2,opt,name=guid" json:"guid,omitempty"`
	Stamp         uint64 `protobuf:"varint,3,opt,name=stamp" json:"stamp,omitempty"`
}

func (m *Timer) Reset()                    { *m = Timer{} }
func (m *Timer) String() string            { return proto.CompactTextString(m) }
func (*Timer) ProtoMessage()               {}
func (*Timer) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func init() {
	proto.RegisterType((*Emit)(nil), "pipelines.Emit")
	proto.RegisterType((*Data)(nil), "pipelines.Data")
	proto.RegisterType((*Work)(nil), "pipelines.Work")
	proto.RegisterType((*Node)(nil), "pipelines.Node")
	proto.RegisterType((*Timer)(nil), "pipelines.Timer")
	proto.RegisterEnum("pipelines.State", State_name, State_value)
}

var fileDescriptor0 = []byte{
	// 280 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x8c, 0x91, 0xdf, 0x4b, 0xfb, 0x30,
	0x14, 0xc5, 0xbf, 0x5d, 0xd3, 0xee, 0xdb, 0x3b, 0xb7, 0x96, 0x80, 0xd0, 0x17, 0x51, 0xfa, 0x24,
	0x3e, 0x4c, 0x98, 0x0f, 0x22, 0x3e, 0x4d, 0x5b, 0x45, 0x04, 0x15, 0x1d, 0xf3, 0x39, 0x6b, 0x2f,
	0x12, 0xb6, 0x34, 0x25, 0x89, 0x82, 0xff, 0xbd, 0xe9, 0x1d, 0xf8, 0xe3, 0x49, 0x9f, 0xda, 0x7b,
	0xce, 0x3d, 0x9f, 0x93, 0x10, 0x48, 0x3b, 0xd9, 0xe1, 0x46, 0xb6, 0x68, 0xa7, 0x9d, 0xd1, 0x4e,
	0xf3, 0xe4, 0x53, 0x28, 0x4e, 0x81, 0x55, 0x4a, 0x3a, 0xbe, 0x0f, 0xb1, 0xc1, 0x5a, 0x9b, 0x26,
	0x0f, 0x0e, 0x82, 0xc3, 0xd1, 0x2c, 0x9d, 0x7e, 0x85, 0x4a, 0xe1, 0x04, 0x9f, 0x40, 0x6c, 0x9d,
	0x41, 0xa1, 0xf2, 0x81, 0x5f, 0x48, 0x8a, 0x33, 0x60, 0xa4, 0xef, 0xc2, 0xd8, 0xc7, 0x0c, 0x6e,
	0x84, 0x93, 0xba, 0xbd, 0x29, 0x29, 0xcf, 0xf8, 0x0e, 0xb0, 0x97, 0x57, 0xd9, 0xd0, 0x32, 0x4d,
	0x2b, 0xe9, 0x6c, 0x1e, 0x52, 0xf4, 0x0a, 0xd8, 0xb3, 0x36, 0xeb, 0xdf, 0x3b, 0xf7, 0x80, 0xb5,
	0xba, 0x41, 0x82, 0xfc, 0xb4, 0xef, 0xbc, 0x5c, 0x2c, 0x81, 0xf5, 0x5f, 0x9e, 0xc2, 0xd0, 0xa2,
	0x79, 0x93, 0x35, 0x12, 0x28, 0xe1, 0x23, 0x08, 0xd7, 0xf8, 0xbe, 0x3d, 0x68, 0xef, 0xd6, 0x5a,
	0x29, 0xd1, 0x36, 0xdb, 0x7a, 0x5f, 0x1b, 0x59, 0x27, 0x1c, 0xe6, 0xcc, 0x8f, 0x93, 0x59, 0xf6,
	0x0d, 0xfb, 0xd4, 0xeb, 0xc5, 0x39, 0x44, 0x0b, 0xa9, 0xd0, 0xfc, 0xed, 0x6e, 0x63, 0xc2, 0xa9,
	0x8e, 0xe8, 0xec, 0xe8, 0x18, 0x22, 0xa2, 0xf0, 0xff, 0xc0, 0x1e, 0x1e, 0xef, 0xcb, 0xec, 0x5f,
	0xff, 0x77, 0x31, 0xbf, 0xbc, 0xcd, 0x02, 0x9e, 0x78, 0x73, 0x31, 0xbf, 0xae, 0xb2, 0x01, 0x1f,
	0x42, 0x58, 0x56, 0xcb, 0x2c, 0x5c, 0xc5, 0xf4, 0x26, 0x27, 0x1f, 0x01, 0x00, 0x00, 0xff, 0xff,
	0x19, 0x00, 0xe8, 0xfe, 0xa6, 0x01, 0x00, 0x00,
}
